{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","useState","sign","text","Math","abs","onClick","TransactionList","data","setData","useEffect","fetch","method","then","response","json","catch","err","console","log","key","AddTransaction","setText","setAmount","onSubmit","e","a","preventDefault","headers","body","JSON","stringify","document","getElementById","finalResult","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render"],"mappings":"iOAEaA,EAAS,WACpB,OACE,kD,qBCJW,WAACC,EAAOC,GACnB,OAAOA,EAAOC,MACZ,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEG,aAAcH,EAAMG,aAAaC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOL,EAAOM,aAErF,IAAK,kBACH,OAAO,2BACFP,GADL,IAEEG,aAAa,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,iBAE5C,QACE,OAAOH,ICTTQ,EAAe,CACnBL,aAAc,IAIHM,EAAgBC,wBAAcF,GAG9BG,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,qBAAWC,EAAYN,GADH,mBACvCR,EADuC,KAChCe,EADgC,KAkB9C,OAAQ,kBAACN,EAAcO,SAAf,CAAwBC,MAAO,CACrCd,aAAcH,EAAMG,aACpBe,kBAhBF,SAA2BZ,GACzBS,EAAS,CACPb,KAAM,qBACNK,QAASD,KAcXa,eAVF,SAAwBd,GACtBU,EAAS,CACPb,KAAM,kBACNK,QAASF,OASVO,IChCQQ,EAAU,WAAO,IAKtBC,EAJmBC,qBAAWb,GAA5BN,aAEqBoB,KAAI,SAAAlB,GAAW,OAAIA,EAAYmB,UAEtCC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAEtE,OACE,6BACE,4CACF,qCAAMP,KCVGQ,EAAiB,WAAO,IAG7BC,EAFmBR,qBAAWb,GAA5BN,aAEqBoB,KAAI,SAAAlB,GAAW,OAAIA,EAAYmB,UAEtDO,EAASD,EACZ1B,QAAO,SAAAuB,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GAELI,IAEH,EADDF,EAAQ1B,QAAO,SAAAuB,GAAI,OAAIA,EAAO,KAAGF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,IAEtEC,QAAQ,GAEV,OACE,yBAAKK,UAAU,qBACX,6BACE,sCACR,uBAAGA,UAAU,cAAcF,IAErB,6BACE,uCACR,uBAAGE,UAAU,eAAeD,MCvBjBE,EAAc,SAAC,GAAqB,IAAnB7B,EAAkB,EAAlBA,YACpBa,EAAsBI,qBAAWb,GAAjCS,kBADsC,EAEvBiB,mBAAS,IAFc,mBAIxCC,GAJwC,UAIjC/B,EAAYmB,OAAS,EAAI,IAAM,KAe5C,OACE,wBAAIS,UAAW5B,EAAYmB,OAAS,EAAI,QAAU,QAE/CnB,EAAYgC,KAFf,IAEqB,8BAAOD,EAAP,SAAcE,KAAKC,IAAIlC,EAAYmB,SAAe,4BAAQgB,QAAS,kBAAMtB,EAAkBb,EAAYC,KAAK2B,UAAU,cAApE,OCpB9DQ,EAAkB,WACJnB,qBAAWb,GAA5BN,aAD4B,IAAD,EAEZgC,mBAAS,IAFG,mBAE5BO,EAF4B,KAEvBC,EAFuB,KAenC,OAZAC,qBAAU,WAERC,MAAM,8CAA+C,CACjDC,OAAS,QAEVC,MAAK,SAAAC,GAAQ,OAAMA,EAASC,UAC9BF,MAAK,SAACL,GACPC,EAAQD,MACPQ,OAAM,SAACC,GACRC,QAAQC,IAAI,eAIZ,6BACE,uCACA,wBAAIpB,UAAU,QACXS,EAAKnB,KAAI,SAAAlB,GAAW,OACpB,kBAAC,EAAD,CAAaiD,IAAKjD,EAAYC,GAAID,YAAaA,U,uBCtB3CkD,EAAiB,WAAO,IAAD,EACVpB,mBAAS,IADC,mBAC3BE,EAD2B,KACrBmB,EADqB,OAENrB,mBAAS,GAFH,mBAE3BX,EAF2B,KAEnBiC,EAFmB,KAI1BtC,EAAmBG,qBAAWb,GAA9BU,eAEFuC,EAAQ,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DACfD,EAAEE,iBADa,kBAIIhB,MAAM,6CAA6C,CAClEC,OAAQ,OACRgB,QAAS,CACP,eAAgB,oBAElBC,KAAOC,KAAKC,UAAU,CACpB5B,KAAO6B,SAASC,eAAe,QAAQlD,MAEvCO,OAAS0C,SAASC,eAAe,SAASlD,UAZjC,cAITyB,EAJS,gBAeWA,EAAKO,OAfhB,OAeTmB,EAfS,OAgBHhB,QAAQC,IAAIe,GACZhB,QAAQC,IAAI,eAjBT,kDAmBHD,QAAQC,IAAR,MAnBG,QAwBTgB,EAAiB,CACrB/D,GAAIgC,KAAKgC,MAAsB,IAAhBhC,KAAKiC,UACpBlC,OACAb,QAASA,GAGXL,EAAekD,GAEfjB,QAAQC,IAAIgB,GAhCG,0DAAH,sDAmCd,OACE,6BACE,mDACA,0BAAMX,SAAUA,GACd,yBAAKzB,UAAU,gBACb,2BAAOuC,QAAQ,QAAf,QACA,2BAAOtE,KAAK,OAAOI,GAAI,OAAOW,MAAOoB,EAAMoC,SAAU,SAACd,GAAD,OAAOH,EAAQG,EAAEe,OAAOzD,QAAQ0D,YAAY,mBAEnG,yBAAK1C,UAAU,gBACb,2BAAOuC,QAAQ,UAAf,UACU,6BADV,2CAIA,2BAAOtE,KAAK,SAASI,GAAI,QAAQW,MAAOO,EAAQiD,SAAU,SAACd,GAAD,OAAOF,EAAUE,EAAEe,OAAOzD,QAAQ0D,YAAY,qBAE1G,4BAAQ1C,UAAU,OAAlB,sB,MCjCO2C,MAff,WACE,OACE,kBAAC,EAAD,KAEE,kBAAC,EAAD,MACA,yBAAK3C,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SChBR4C,IAASC,OAAO,kBAAC,EAAD,MAASZ,SAASC,eAAe,W","file":"static/js/main.ab1a2f00.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <h2>\r\n      Money Manager App\r\n    </h2>\r\n  )\r\n}","export default (state, action) => {\r\n    switch(action.type) {\r\n      case 'DELETE_TRANSACTION':\r\n        return {\r\n          ...state,\r\n          transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n        }\r\n      case 'ADD_TRANSACTION':\r\n        return {\r\n          ...state,\r\n          transactions: [action.payload, ...state.transactions]\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({ \r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n  return (<GlobalContext.Provider value={{\r\n    transactions: state.transactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>);\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <div>\r\n      <h4>Your Balance</h4>\r\n    <h1>₹{total}</h1>\r\n    </div>\r\n  )\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n  <p className=\"money plus\">{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n  <p className=\"money minus\">{expense}</p>\r\n        </div>\r\n      </div>\r\n  )\r\n}","import React, {useContext , useEffect , useState} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  const [data,setData] = useState([])\r\n\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n//   useEffect(()=>{\r\n        \r\n//     fetch(\"https://app-demo-new.herokuapp.com/products\", {\r\n//         method : \"DELETE\",\r\n\r\n//     }).then(res => res.json())\r\n//     .then((data) => {\r\n//       setData(data)\r\n//   }).catch((err) => {\r\n//     console.log(\"error\");\r\n//   })\r\n// })\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n      \r\n      {transaction.text} <span>{sign}₹{Math.abs(transaction.amount)}</span><button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n    </li>\r\n  )\r\n}","import React, { useContext , useEffect, useState } from 'react';\r\nimport { Transaction } from './Transaction';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const [data,setData] = useState([])\r\n  useEffect(()=>{\r\n        \r\n    fetch(\"https://app-demo-new.herokuapp.com/products\", {\r\n        method : \"GET\",\r\n\r\n    }).then(response =>   response.json())\r\n    .then((data) => {\r\n    setData(data)\r\n  }).catch((err) => {\r\n    console.log(\"error\");\r\n  })\r\n})\r\n  return (\r\n    <div>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {data.map(transaction => \r\n        (<Transaction key={transaction.id} transaction={transaction} />))\r\n        }\r\n        \r\n      </ul>\r\n    </div>\r\n      \r\n  )\r\n}","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = async(e) => {\r\n    e.preventDefault();\r\n\r\n    try{\r\n      var data = await fetch(\"https://app-demo-new.herokuapp.com/product\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body : JSON.stringify({\r\n          text : document.getElementById(\"item\").value,\r\n          \r\n          amount : document.getElementById(\"price\").value,\r\n        }),\r\n      });\r\n      let finalResult = await data.json();\r\n                console.log(finalResult);\r\n                console.log(\"finalResult\");\r\n                }catch (error){\r\n                console.log(error);\r\n            }\r\n    \r\n\r\n  \r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount\r\n    }\r\n\r\n    addTransaction(newTransaction);\r\n\r\n    console.log(newTransaction);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" id =\"item\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n          >\r\n          <input type=\"number\" id =\"price\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      \n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}